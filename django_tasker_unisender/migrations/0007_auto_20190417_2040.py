# Generated by Django 2.2 on 2019-04-17 20:40

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('django_tasker_unisender', '0006_auto_20190417_1932'),
    ]

    operations = [
        migrations.AlterField(
            model_name='field',
            name='name',
            field=models.CharField(help_text='Variable to be substituted. It must be unique and case sensitive. Also, it is not recommended to create a field with the same name as the standard field names (tags, email, phone, email_status, phone_status, etc.)', max_length=78, unique=True, validators=[django.core.validators.RegexValidator(message='Use the format 0-9 a-z.', regex='^[0-9a-zA-Z]+$')], verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='field',
            name='public_name',
            field=models.CharField(help_text='Field name. If it is not used, an automatical generation by the «name» field will take place.', max_length=200, verbose_name='Public name'),
        ),
        migrations.AlterField(
            model_name='field',
            name='type',
            field=models.SmallIntegerField(choices=[(1, 'string'), (2, 'text'), (3, 'number'), (4, 'date'), (5, 'bool')], help_text='The field type is relevant only for the web interface, the controls are adjusted to the possible values. Values of different types are stored in the same way, in the text form.', null=True, verbose_name='Type'),
        ),
    ]
